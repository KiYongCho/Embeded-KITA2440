### 문자열 (String)

* 0개 이상의 문자들의 집합 (stream of char)
* java.lang.String : java패키지 하위의 lang패키지 하위의 String클래스
* 문자열은 문자(char)의 집합(배열)
* 데이터타입은 참조타입(reference type)
* 수도 없이 사용되는 매우 기본적인 클래스이므로 잘 알아둬야 함!
* 문자가 0개인 문자열을 널스트링(null string)이라고 함
* java에서는 ""으로 문자열을 표기 (javascript, python에서는 "", '' 로 문자열을 표기)
* 생성자, 필드, 메소드들을 잘 알아두자.
* 문자열불변(immutable)의법칙 : 한번 메모리에 생성된 문자열은 변하지 않는다.
   "안녕하세요"을 생성하면 메모리에서 변경할 수 없다. "안녕하세요" > "안녕" 불가X
* StringBuffer 또는 StringBuilder라는 유틸리티클래스들을 활용해서 문자열을 조작하는 것이
   메모리를 절약하는 좋은 습관이다. (문자열을 조작하면 버퍼상에서 문자열을 처리하고 일괄 문자열로 변경)  
   

### 배열 (Array)

 * 배열은 동일한 타입들의 여러 값을 저장하기 위한 자료구조
  (Javascript는 다른 타입들을 하나의 배열에 저장이 가능, Python은 배열이 없음)
  
 * 배열은 참조타입
 
 * 배열에는 기본타입의 값들 또는 참조타입의 참조값들을 저장
    int[] intArray = {10, 20, 30};         // 기본타입의 배열
    String[] strArray = {"Hello", "Hi"}; // 참조타입의 배열
       
 * 자바 배열의 특성
   - 같은 타입의 데이터들만 저장가능
   - 반드시 초기화해야 사용이 가능
   - 자바의 배열은 메모리에 연속적으로 저장됨
   - 불변
   
 * 배열 선언
   배열의 타입을 결정 (참조타입에서는 선언시에 할당할 메모리의 크기를 결정할 수 없음)
 	int[] intArray; (좋은 방법)
 	int intArray[];
 	
 * 배열 초기화
 	배열의 참조값을 저장
    int[] intArray = {1, 2, 3, 4, 5};
    
 * 배열 할당
 	배열의 참조값이 변경
    intArray = {10, 20, 30};
    
 * 배열 인덱스 / 길이
 	intArray의 인덱스 : 0~2
 	intArray의 길이 : 3
 	intArray[0] => 10
 	intArray[2] => 30
 	intArray.length
 	
 * 다차원 배열 (배열의 요소<element>가 다시 배열인 배열)
 
 	2차원 배열 (배열안에 배열)
    int[][] intArray = {
    	{1, 2, 3},
    	{4, 5, 6},
    	{7, 8, 9}    	
    };
    intArray[0][2] => 3
    intArray.length => 3
    intArray[0].length => 3
    intArray[0][0].length => error
    
 	3차원 배열 (배열안에 배열안에 배열)
     int[][][] intArray = {
    	{
    		{1,2,3},
    		{4,5,6},
    		{7,8,9}
    	},
    	{
    		{1,2,3},
    		{4,5,6},
    		{7,8,9}
    	}    	
     };
     intArray.length => 2
     intArray[1].length => 3
     intArray[1][2].length => 3
     intArray[0][0][0].length => error
  
   
 

   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   